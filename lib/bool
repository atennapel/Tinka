let if : {-A : *} -> Bool -> A -> A -> A
  = \{A} b t f. elimBool (\_. A) t f b;
let not : Bool -> Bool = \b. if b False True;
let and : Bool -> Bool -> Bool
  = \a b. if a b False;
let or : Bool -> Bool -> Bool
  = \a b. if a True b;
let eq : Bool -> Bool -> Bool
  = \a b. if a b (not b);
let neq : Bool -> Bool -> Bool
  = \a b. not (eq a b);

(if, not, and, or, eq, neq, Unit)
