let -CNat = (-A : *) -> A -> (A -> A) -> A;
let CZ : CNat = \A z s. z;
let CS : CNat -> CNat = \n A z s. s (n A z s);
let cataNat : {-A : *} -> CNat -> A -> (A -> A) -> A
  = \n. n _;

let add : CNat -> CNat -> CNat = \a b. cataNat a b CS;
let mul : CNat -> CNat -> CNat = \a b. cataNat a CZ (add b);

[CNat, CZ, CS, @cataNat, add, mul]
:
(-CNat : *)
**
(CZ : CNat)
**
(CS : CNat -> CNat)
**
(cataNat : {-A : *} -> CNat -> A -> (A -> A) -> A)
**
(add : CNat -> CNat -> CNat)
**
(mul : CNat -> CNat -> CNat)
**
()
